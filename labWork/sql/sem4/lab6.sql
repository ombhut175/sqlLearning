-- CREATE THE PRODUCTS TABLE
CREATE TABLE PRODUCTS (
 PRODUCT_ID INT PRIMARY KEY,
 PRODUCT_NAME VARCHAR(250) NOT NULL,
 PRICE DECIMAL(10, 2) NOT NULL
);
-- INSERT DATA INTO THE PRODUCTS TABLE
INSERT INTO PRODUCTS (PRODUCT_ID, PRODUCT_NAME, PRICE) VALUES
(1, 'SMARTPHONE', 35000),
(2, 'LAPTOP', 65000),
(3, 'HEADPHONES', 5500),
(4, 'TELEVISION', 85000),
(5, 'GAMING CONSOLE', 32000);

SELECT * FROM PRODUCTS;


-- From the above given tables perform the following queries:
-- Part - A
-- 1. Create a cursor Product_Cursor to fetch all the rows from a products table.
DECLARE @PRODUCT_ID INT,@PRODUCT_NAME VARCHAR(250),@PRICE DECIMAL(10, 2);

    DECLARE CURSOR_PRODUCT CURSOR
    FOR SELECT * 
        FROM PRODUCTS;

    OPEN CURSOR_PRODUCT;

    FETCH NEXT FROM CURSOR_PRODUCT
    INTO @PRODUCT_ID,@PRODUCT_NAME,@PRICE;

    WHILE @@FETCH_STATUS = 0
    BEGIN
        PRINT CAST(@PRODUCT_ID AS VARCHAR) + '-' + @PRODUCT_NAME + '-' +CAST(@PRICE AS VARCHAR);
        FETCH NEXT FROM CURSOR_PRODUCT
        INTO @PRODUCT_ID,@PRODUCT_NAME,@PRICE;
    END

    CLOSE CURSOR_PRODUCT;

DEALLOCATE CURSOR_PRODUCT;

-- 2. Create a cursor Product_Cursor_Fetch to fetch the records in form of ProductID_ProductName. (Example: 1_Smartphone)
DECLARE @PRODUCT_ID INT,@PRODUCT_NAME VARCHAR(250);

    DECLARE CURSOR_PRODUCT_FETCH CURSOR
    FOR SELECT PRODUCT_ID,PRODUCT_NAME 
        FROM PRODUCTS;

    OPEN CURSOR_PRODUCT_FETCH;

    FETCH NEXT FROM CURSOR_PRODUCT_FETCH
    INTO @PRODUCT_ID,@PRODUCT_NAME;

    WHILE @@FETCH_STATUS = 0
    BEGIN
        PRINT CAST(@PRODUCT_ID AS VARCHAR) + '_' + @PRODUCT_NAME;

        FETCH NEXT FROM CURSOR_PRODUCT_FETCH
        INTO @PRODUCT_ID,@PRODUCT_NAME;
    END

    CLOSE CURSOR_PRODUCT_FETCH;

DEALLOCATE CURSOR_PRODUCT_FETCH;
-- 3. Create a Cursor to Find and Display Products Above Price 30,000.
DECLARE @PRODUCT_ID INT,@PRODUCT_NAME VARCHAR(250),@PRICE DECIMAL(10, 2);

    DECLARE CURSOR_PRODUCT CURSOR
    FOR SELECT * 
        FROM PRODUCTS;

    OPEN CURSOR_PRODUCT;

    FETCH NEXT FROM CURSOR_PRODUCT
    INTO @PRODUCT_ID,@PRODUCT_NAME,@PRICE;

    WHILE @@FETCH_STATUS = 0
    BEGIN
        IF (@PRICE > 30000)
            PRINT CAST(@PRODUCT_ID AS VARCHAR) + '-' + @PRODUCT_NAME + '-' +CAST(@PRICE AS VARCHAR);

            FETCH NEXT FROM CURSOR_PRODUCT
        INTO @PRODUCT_ID,@PRODUCT_NAME,@PRICE;
    END

    CLOSE CURSOR_PRODUCT;

DEALLOCATE CURSOR_PRODUCT;
-- 4. Create a cursor Product_CursorDelete that deletes all the data from the Products table.
DECLARE @PRODUCT_ID INT;

    DECLARE CURSOR_PRODUCT CURSOR
    FOR SELECT PRODUCT_ID 
        FROM PRODUCTS;

    OPEN CURSOR_PRODUCT;

    FETCH NEXT FROM CURSOR_PRODUCT
    INTO @PRODUCT_ID;

    WHILE @@FETCH_STATUS = 0
    BEGIN
        DELETE FROM PRODUCTS 
        WHERE PRODUCT_ID = @PRODUCT_ID
        
        FETCH NEXT FROM CURSOR_PRODUCT
        INTO @PRODUCT_ID;
    END

    CLOSE CURSOR_PRODUCT;

DEALLOCATE CURSOR_PRODUCT;

SELECT * FROM PRODUCTS;
-- Part – B
-- 5. Create a cursor Product_CursorUpdate that retrieves all the data from the products table and increases the price by 10%.
DECLARE @PRODUCT_ID INT;

    DECLARE CURSOR_PRODUCT CURSOR
    FOR SELECT PRODUCT_ID 
        FROM PRODUCTS;

    OPEN CURSOR_PRODUCT;

    FETCH NEXT FROM CURSOR_PRODUCT
    INTO @PRODUCT_ID;

    WHILE @@FETCH_STATUS = 0
    BEGIN
        UPDATE PRODUCTS
        SET PRICE = PRICE + PRICE * 0.10
        WHERE PRODUCT_ID = @PRODUCT_ID;
        
        FETCH NEXT FROM CURSOR_PRODUCT
        INTO @PRODUCT_ID;
    END

    CLOSE CURSOR_PRODUCT;

DEALLOCATE CURSOR_PRODUCT;

SELECT * FROM PRODUCTS;
-- 6. Create a Cursor to Rounds the price of each product to the nearest whole number.
DECLARE @PRODUCT_ID INT;

    DECLARE CURSOR_PRODUCT CURSOR
    FOR SELECT PRODUCT_ID 
        FROM PRODUCTS;

    OPEN CURSOR_PRODUCT;

    FETCH NEXT FROM CURSOR_PRODUCT
    INTO @PRODUCT_ID;

    WHILE @@FETCH_STATUS = 0
    BEGIN
        UPDATE PRODUCTS
        SET PRICE = ROUND(PRICE,0)
        WHERE PRODUCT_ID = @PRODUCT_ID;
        
        FETCH NEXT FROM CURSOR_PRODUCT
        INTO @PRODUCT_ID;
    END

    CLOSE CURSOR_PRODUCT;

DEALLOCATE CURSOR_PRODUCT;
-- Part – C

CREATE TABLE NEWPRODUCTS (
 PRODUCT_ID INT PRIMARY KEY,
 PRODUCT_NAME VARCHAR(250) NOT NULL,
 PRICE DECIMAL(10, 2) NOT NULL
);
-- INSERT DATA INTO THE PRODUCTS TABLE
INSERT INTO NEWPRODUCTS (PRODUCT_ID, PRODUCT_NAME, PRICE) VALUES
(1, 'SMARTPHONE', 35000),
(2, 'LAPTOP', 65000),
(3, 'HEADPHONES', 5500),
(4, 'TELEVISION', 85000),
(5, 'GAMING CONSOLE', 32000);

SELECT * FROM NEWPRODUCTS;

SELECT * FROM PRODUCTS;

TRUNCATE TABLE NEWPRODUCTS;
-- 7. Create a cursor to insert details of Products into the NewProducts table if the product is “Laptop”
-- (Note: Create NewProducts table first with same fields as Products table)

DECLARE @PRODUCT_ID INT,@PRODUCT_NAME VARCHAR(250),@PRICE DECIMAL(10, 2);

    DECLARE CURSOR_PRODUCT CURSOR
    FOR SELECT * 
        FROM PRODUCTS;

    OPEN CURSOR_PRODUCT;

    FETCH NEXT FROM CURSOR_PRODUCT
    INTO @PRODUCT_ID,@PRODUCT_NAME,@PRICE;

    WHILE @@FETCH_STATUS = 0
    BEGIN
        IF (@PRODUCT_NAME = 'LAPTOP')
            INSERT INTO NEWPRODUCTS VALUES
            (@PRODUCT_ID , @PRODUCT_NAME , @PRICE)
        
        FETCH NEXT FROM CURSOR_PRODUCT
        INTO @PRODUCT_ID,@PRODUCT_NAME,@PRICE;
    END

    CLOSE CURSOR_PRODUCT;

DEALLOCATE CURSOR_PRODUCT;

CREATE TABLE ARCHIVEDPRODUCTS (
    PRODUCT_ID INT PRIMARY KEY,
    PRODUCT_NAME VARCHAR(250) NOT NULL,
    PRICE DECIMAL(10, 2) NOT NULL
);
-- 8. Create a Cursor to Archive High-Price Products in a New Table (ArchivedProducts), Moves products
-- with a price above 50000 to an archive table, removing them from the original Products table.

DECLARE @PRODUCT_ID INT,@PRODUCT_NAME VARCHAR(250),@PRICE DECIMAL(10, 2);

    DECLARE CURSOR_PRODUCT CURSOR
    FOR SELECT * 
        FROM PRODUCTS;

    OPEN CURSOR_PRODUCT;

    FETCH NEXT FROM CURSOR_PRODUCT
    INTO @PRODUCT_ID,@PRODUCT_NAME,@PRICE;

    WHILE @@FETCH_STATUS = 0
    BEGIN
        IF(@PRICE > 50000) 
        BEGIN
            DELETE FROM PRODUCTS 
            WHERE PRODUCT_ID = @PRODUCT_ID;

            INSERT INTO ARCHIVEDPRODUCTS VALUES
            (@PRODUCT_ID,@PRODUCT_NAME,@PRICE);
        END
        
        FETCH NEXT FROM CURSOR_PRODUCT
        INTO @PRODUCT_ID,@PRODUCT_NAME,@PRICE;
    END

    CLOSE CURSOR_PRODUCT;

DEALLOCATE CURSOR_PRODUCT;

SELECT * FROM PRODUCTS;
SELECT * FROM ARCHIVEDPRODUCTS;