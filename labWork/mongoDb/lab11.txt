1. Find employees whose name start with E.
    db.employee.find({ENAME : {$regex : /^e/i}})

2. Find employees whose name ends with n.
    db.employee.find({ENAME : {$regex : /n$/i}})

3. Find employees whose name starts with S or M in your collection.
    db.employee.find({ENAME : {$regex : /^[sm]/i}})

4. Find employees where city starts with A to M in your collection.
    db.employee.find({CITY : {$regex : /^[am]/i}})

5. Find employees where city name ends in ‘ney’.
    db.employee.find({CITY : {$regex : /ney$/i}})

6. Display employee info whose name contains n. (Both uppercase(N) and lowercase(n))
    db.employee.find({ENAME : {$regex : /n/i}})

7. Display employee info whose name starts with E and having 5 characters.
    db.employee.find({ENAME : {$regex : /^e\w{4}$/i}})

8. Display employee whose name start with S and ends in a.\
    db.employee.find({ENAME : {$regex : /^s.*a$/i}})

9. Display EID, ENAME, CITY and SALARY whose name starts with ‘Phi’.
    db.employee.find({ENAME : {$regex : /^phi/i}},{_id:0,EID:1,ENAME:1,CITY:1,SALARY:1})

10. Display ENAME, JOININGDATE and CITY whose city contains ‘dne’ as three letters in city name.
    db.employee.find({CITY : {$regex : /dne/i}},{_id:0,EID:1,ENAME:1,CITY:1,SALARY:1})

11. Display ENAME, JOININGDATE and CITY who does not belongs to city London or Sydney.
    db.employee.find({CITY : {$not : /^london$|^sydney$/i}})

12. Find employees whose names start with 'J'.
13. Find employees whose names end with 'y'.
14. Find employees whose names contain the letter 'a'.
15. Find employees whose names contain either 'a' or 'e'.
    db.employee.find({ENAME : /a|e/i})

16. Find employees whose names start with 'J' and end with 'n'.

17. Find employees whose CITY starts with 'New'.
    db.employee.find({CITY : /^new/i})

18. Find employees whose CITY does not start with 'L'
    db.employee.find({CITY : {$not: /l/i}})

19. Find employees whose CITY contains the word 'York'.

20. Find employees whose names have two consecutive vowels (a, e, i, o, u).
    db.employee.find({ENAME : /[AEIOU]{2}/i})

21. Find employees whose names have three or more letters.
    db.employee.find({ENAME : /^.{3,}$/})

22. Find employees whose names have exactly 4 letters.
    db.employee.find({ENAME : /^.{4}$/})

23. Find employees whose names start with either 'S' or 'M'.
    db.employee.find({ENAME : /^[sm]/i})

24. Find employees whose names contain 'il' anywhere.
    db.employee.find({ENAME : /il/i})

25. Find employees whose names do not contain 'a'.
    db.employee.find({ENAME : {$not : /a/i}})

26. Find employees whose names contain any digit.
    db.employee.find({ENAME : /\d/i})

27. Find employees whose names contain exactly one vowel.
    db.employee.find({ENAME : /^[^aeiou]*[aeiou][^aeiou]$/i})

28. Find employees whose names start with any uppercase letter followed by any lowercase letter.
    db.employee.find({ENAME : /^[A-Z][a-z]/})


PART B:-

1. Display documents where sname start with K.
2. Display documents where sname starts with Z or D.
    db.Student.find({SNAME : /^[zd]/i})

3. Display documents where city starts with A to R.
    db.Student.find({CITY : /[a-r]/i})

4. Display students’ info whose name start with P and ends with i.
5. Display students’ info whose department name starts with ‘C’.
6. Display name, sem, fees, and department whose city contains ‘med’ as three letters somewhere in city name.
    db.Student.find({CITY : /med/i},{_id:0,SNAME:1,SEM:1,FEES:1,DEPARTMENT:1})

7. Display name, sem, fees, and department who does not belongs to city Rajkot or Baroda.
    db.Student.find({CITY : {$not : /^(rajkot|baroda)$/i}},{_id:0,CITY:1,SNAME:1,SEM:1,FEES:1,DEPARTMENT:1})

8. Find students whose names start with 'K' and are followed by any character.
    db.Student.find({SNAME : /^k/i})

9. Find students whose names end with 'a'.
    db.Student.find({SNAME : /a$/i})

10. Find students whose names contain 'ri'. (case-insensitive)
    db.Student.find({SNAME : /ri/i})


Part – C
1. Find students whose names start with a vowel (A, E, I, O, U).
2. Find students whose CITY ends with 'pur' or 'bad'.
    db.Student.find({CITY : /(pur|bad)$/i})

3. Find students whose FEES starts with '1'.

4. Find students whose SNAME starts with 'K' or 'V'.

5. Find students whose CITY contains exactly five characters.
    db.Student.find({CITY : /^.{5}$/})

6. Find students whose names do not contain the letter 'e'.
    db.Student.find({SNAME : {$not: /e/i}})

7. Find students whose CITY starts with 'Ra' and ends with 'ot'.
    db.Student.find({CITY : /^Ra.*ot$/})

8. Find students whose names contain exactly one vowel.
    db.Student.find({SNAME : /[^aeiou]*[aeiou][^aeiou]*/i})

9. Find students whose names start and end with the same letter.
    db.Student.find({SNAME : /^([a-z]).*\1$/i})

        db.Student.find(
    { SNAME: /^([a-zA-Z]).*\1$/ },
    { _id: 0, SNAME: 1, SEM: 1, FEES: 1, DEPARTMENT: 1 }
    )


10. Find students whose DEPARTMENT starts with either 'C' or 'E'.
    db.Student.find({DEPARTMENT : /^[ce]/i})

11. Find students whose SNAME has exactly 5 characters.
    db.Student.find({SNAME : /^.{5}$/i})

12. Find students whose GENDER is Female and CITY starts with 'A'.
    db.Student.find({GENDER:/(female)/i , CITY: /^a/i})
